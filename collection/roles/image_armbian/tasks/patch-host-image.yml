---

- name: "Clean host directory {{ image_armbian_host_directory }}"
  delegate_to: localhost
  become: true
  when: image_armbian_clean_working_directory
  ansible.builtin.script: "files/mounter.sh -c -hd {{ image_armbian_host_directory }}"
  args:
    executable: /bin/bash
  changed_when: false

- name: "Prepare host directory {{ image_armbian_host_directory }}"
  delegate_to: localhost
  become: true
  when: image_armbian_clean_working_directory
  ansible.builtin.script: "files/mounter.sh -p -hd {{ image_armbian_host_directory }} -bi {{ image_armbian_base_image_path }}"
  args:
    executable: /bin/bash
  changed_when: false

- name: Customize the armbian image
  block:
    - name: Mount host image
      delegate_to: localhost
      become: true
      ansible.builtin.script: "files/mounter.sh -m -hd {{ image_armbian_host_directory }}"
      args:
        executable: /bin/bash
      changed_when: false
      register: mount_image
    - name: Debug mount_image
      ansible.builtin.debug:
        var: mount_image
    - name: Set armbian_first_run.txt
      delegate_to: localhost
      become: true
      ansible.builtin.template:
        src: armbian_first_run.txt
        dest: "{{ image_armbian_host_directory }}/rootfs/boot/armbian_first_run.txt"
        mode: 0644
      changed_when: false
      register: armbian_first_run
    - name: Debug armbian_first_run
      ansible.builtin.debug:
        var: armbian_first_run
    - name: Customize the host image
      delegate_to: localhost
      become: true
      ansible.builtin.script: "files/customizer.sh -rf {{ image_armbian_host_directory }}/rootfs -cu {{ image_armbian_username }}"
      args:
        executable: /bin/bash
      changed_when: false
      register: customize_image
    - name: Debug customize_image
      ansible.builtin.debug:
        var: customize_image
    - name: Copy ssh public key
      delegate_to: localhost
      become: true
      ansible.builtin.template:
        src: "{{ image_armbian_ssh_pub_key_path }}"
        dest: "{{ image_armbian_host_directory }}/rootfs/home/{{ image_armbian_username }}/.ssh/authorized_keys"
        force: true
        owner: "1000"
        group: "1000"
        mode: "0640"
      changed_when: false
      register: copy_ssh_pub_key
    - name: Debug copy_ssh_pub_key
      ansible.builtin.debug:
        var: copy_ssh_pub_key
    - name: Fix /etc/hostname
      delegate_to: localhost
      become: true
      ansible.builtin.copy:
        content: "{{ inventory_hostname }}"
        dest: "{{ image_armbian_host_directory }}/rootfs/etc/hostname"
        mode: 0644
      changed_when: false
      register: fix_hostname
    - name: Debug fix_hostname
      ansible.builtin.debug:
        var: fix_hostname
    - name: Fix /etc/hosts
      delegate_to: localhost
      become: true
      ansible.builtin.replace:
        path: "{{ image_armbian_host_directory }}/rootfs/etc/hosts"
        regexp: rock64
        replace: "{{ inventory_hostname }}"
      changed_when: false
      register: fix_hosts
    - name: Debug fix_hosts
      ansible.builtin.debug:
        var: fix_hosts
    - name: "Set custom MAC address"
      delegate_to: localhost
      when: homecloud_node_mac | length > 0
      become: true
      ansible.builtin.replace:
        path: "{{ image_armbian_host_directory }}/rootfs/lib/armbian/armbian-firstrun-config"
        regexp: "\\$\\{FIXED_IP_SETTINGS\\}$"
        replace: "${FIXED_IP_SETTINGS} ethernet.cloned-mac-address \"{{ homecloud_node_mac }}\" -ethernet.mac-address \"\""
      changed_when: false
  always:
    - name: Unmount host image
      delegate_to: localhost
      become: true
      ansible.builtin.script: "files/mounter.sh -u -hd {{ image_armbian_host_directory }}"
      args:
        executable: /bin/bash
      changed_when: false
      register: umount_image
    - name: Debug umount_image
      ansible.builtin.debug:
        var: umount_image
